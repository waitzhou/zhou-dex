package com.zhexinit.yixiaotong.function.mine;

import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.support.v4.content.LocalBroadcastManager;
import android.text.TextUtils;
import android.util.Log;


import com.zhexinit.yixiaotong.function.home.MainActivity;
import com.zhexinit.yixiaotong.function.home.fragment.HomeFragment;
import com.zhexinit.yixiaotong.utils.SharePerfUtils;

import org.json.JSONException;
import org.json.JSONObject;

import java.util.Iterator;

import cn.jpush.android.api.JPushInterface;

/**
 * Created by:xukun
 * date:2018/11/22
 * description:
 */

/**
 * 自定义接收器
 * <p>
 * 如果不定义这个 Receiver，则：
 * 1) 默认用户会打开主界面
 * 2) 接收不到自定义消息
 */
public class JPushReceiver extends BroadcastReceiver {
    //消息类型，通知：notification，考勤：attendance，subject:课程表，
    // homework:作业，score:成绩，leave请假，contact任课老师（通讯录）
    private static final String TAG = "jPush-school";
    //下面是存储的SharePerfUtils里面哪个推送有多少个未读的消息个数
    public static final String NOTIFICATION_TOTAL = "notification_total";
    public static final String ATTENDANCE_TOTAL = "attendance_total";
    public static final String SUBJECT_TOTAL = "subject_total";
    public static final String HOMEWORK_TOTAL = "homework_total";
    public static final String SCORE_TOTAL = "score_total";
    public static final String LEAVE_TOTAL = "leave_total";
    public static final String CONTACT_TOTAL = "contact_total";

    @Override
    public void onReceive(Context context, Intent intent) {
        try {
            Bundle bundle = intent.getExtras();
            Log.d(TAG, "[MyReceiver] onReceive - " + intent.getAction() + ", extras: " + printBundle(bundle));

            if (JPushInterface.ACTION_REGISTRATION_ID.equals(intent.getAction())) {
                String regId = bundle.getString(JPushInterface.EXTRA_REGISTRATION_ID);
                Log.d(TAG, "[MyReceiver] 接收Registration Id : " + regId);
                //send the Registration Id to your server...

            } else if (JPushInterface.ACTION_MESSAGE_RECEIVED.equals(intent.getAction())) {

                Log.d(TAG, "[MyReceiver] 接收到推送下来的自定义消息: " + bundle.getString(JPushInterface.EXTRA_MESSAGE));
                Log.d(TAG, "JPushInterface.EXTRA_EXTRA==" + bundle.getString(JPushInterface.EXTRA_EXTRA));
                processCustomMessage(context, bundle,1);


            } else if (JPushInterface.ACTION_NOTIFICATION_RECEIVED.equals(intent.getAction())) {
                Log.d(TAG, "[MyReceiver] 接收到推送下来的通知");
                int notifactionId = bundle.getInt(JPushInterface.EXTRA_NOTIFICATION_ID);
                Log.d(TAG, "[MyReceiver] 接收到推送下来的通知的ID: " + notifactionId);

                processCustomMessage(context,bundle,0);

            } else if (JPushInterface.ACTION_NOTIFICATION_OPENED.equals(intent.getAction())) {
                Log.d(TAG, "[MyReceiver] 用户点击打开了通知");

                //打开自定义的Activity
                Intent i = new Intent(context, MainActivity.class);
                i.putExtras(bundle);
                //i.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
                i.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TOP);
                context.startActivity(i);

            } else if (JPushInterface.ACTION_RICHPUSH_CALLBACK.equals(intent.getAction())) {
                Log.d(TAG, "[MyReceiver] 用户收到到RICH PUSH CALLBACK: " + bundle.getString(JPushInterface.EXTRA_EXTRA));
                //在这里根据 JPushInterface.EXTRA_EXTRA 的内容处理代码，比如打开新的Activity， 打开一个网页等..

            } else if (JPushInterface.ACTION_CONNECTION_CHANGE.equals(intent.getAction())) {
                boolean connected = intent.getBooleanExtra(JPushInterface.EXTRA_CONNECTION_CHANGE, false);
                Log.d(TAG, "[MyReceiver]" + intent.getAction() + " connected state change to " + connected);
            } else {
                Log.d(TAG, "[MyReceiver] Unhandled intent - " + intent.getAction());
            }
        } catch (Exception e) {

        }

    }

    // 打印所有的 intent extra 数据
    private static String printBundle(Bundle bundle) {
        StringBuilder sb = new StringBuilder();
        for (String key : bundle.keySet()) {
            if (key.equals(JPushInterface.EXTRA_NOTIFICATION_ID)) {
                sb.append("\nkey:" + key + ", value:" + bundle.getInt(key));
            } else if (key.equals(JPushInterface.EXTRA_CONNECTION_CHANGE)) {
                sb.append("\nkey:" + key + ", value:" + bundle.getBoolean(key));
            } else if (key.equals(JPushInterface.EXTRA_EXTRA)) {
                if (TextUtils.isEmpty(bundle.getString(JPushInterface.EXTRA_EXTRA))) {
                    Log.d(TAG, "This message has no Extra data");
                    continue;
                }

                try {
                    JSONObject json = new JSONObject(bundle.getString(JPushInterface.EXTRA_EXTRA));
                    Iterator<String> it = json.keys();

                    while (it.hasNext()) {
                        String myKey = it.next();
                        sb.append("\nkey:" + key + ", value: [" +
                                myKey + " - " + json.optString(myKey) + "]");
                    }
                } catch (JSONException e) {
                    Log.d(TAG, "Get message extra JSON error!");
                }

            } else {
                sb.append("\nkey:" + key + ", value:" + bundle.get(key));
            }
        }
        return sb.toString();
    }

    //消息类型，通知：notification，考勤：attendance，subject:课程表，
    // homework:作业，score:成绩，leave请假，contact任课老师（通讯录）
    //send msg to MainActivity
    /**
     * @param context
     * @param bundle
     * @param type 0是通知，1是自定义消息
     */
    private void processCustomMessage(Context context, Bundle bundle,int type) {
        String message = bundle.getString(type==1?JPushInterface.EXTRA_MESSAGE:JPushInterface.EXTRA_ALERT);
        String extras = bundle.getString(JPushInterface.EXTRA_EXTRA);
        Intent msgIntent = new Intent(HomeFragment.MESSAGE_RECEIVED_ACTION);
        try {
            JSONObject extraJson = new JSONObject(extras);
            String messageType = (String) extraJson.get("messageType");
            String notificationData = extraJson.getString("notificationData");
            switch (messageType) {
                case "notification":
                    SharePerfUtils.putInt(NOTIFICATION_TOTAL,SharePerfUtils.getInt(NOTIFICATION_TOTAL)+1);
                    break;
                case "attendance":
                    SharePerfUtils.putInt(ATTENDANCE_TOTAL,SharePerfUtils.getInt(ATTENDANCE_TOTAL)+1);
                    break;
                case "subject":
                    SharePerfUtils.putInt(SUBJECT_TOTAL,SharePerfUtils.getInt(SUBJECT_TOTAL)+1);
                    break;
                case "homework":
                    SharePerfUtils.putInt(HOMEWORK_TOTAL,SharePerfUtils.getInt(HOMEWORK_TOTAL)+1);
                    break;
                case "score":
                    SharePerfUtils.putInt(SCORE_TOTAL,SharePerfUtils.getInt(SCORE_TOTAL)+1);
                    break;
                case "leave":
                    SharePerfUtils.putInt(LEAVE_TOTAL,SharePerfUtils.getInt(LEAVE_TOTAL)+1);
                    break;
                case "contact":
                    SharePerfUtils.putInt(CONTACT_TOTAL,SharePerfUtils.getInt(CONTACT_TOTAL)+1);
                    break;
            }
            msgIntent.putExtra(HomeFragment.KEY_MESSAGE, message);
            msgIntent.putExtra(HomeFragment.KEY_MESSAGE_TYPE, messageType);
            msgIntent.putExtra(HomeFragment.KEY_NOTIFICATION_DATA, notificationData);

        } catch (JSONException e) {

        }
        LocalBroadcastManager.getInstance(context).sendBroadcast(msgIntent);
    }
}
